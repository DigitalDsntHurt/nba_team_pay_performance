<p id="notice"><%= notice %></p>

<h1>Team Seasons</h1>

<table>
  <thead>
    <tr>
      <th>Season</th>
      <th>City</th>
      <th>Team</th>
      <th>Salary</th>
      <th>Wins</th>
      <th>Losses</th>
      <th>Win %</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @team_seasons.each do |team_season| %>
      <tr>
        <td><%= team_season.season %></td>
        <td><%= team_season.team_city %></td>
        <td><%= team_season.team_name %></td>
        <td><%= team_season.salary %></td>
        <td><%= team_season.wins %></td>
        <td><%= team_season.losses %></td>
        <td><%= team_season.float %></td>
        <td><%= link_to 'Show', team_season %></td>
        <td><%= link_to 'Edit', edit_team_season_path(team_season) %></td>
        <td><%= link_to 'Destroy', team_season, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<%= link_to 'New Team Season', new_team_season_path %>


<br><br>
<hr>
<br><br>

<script >

//read the data, store them in global variables
var data;
var xAxisName;
var yAxisName;
d3.json("graph.json", function (json) {
console.log("I read " + json.data.length + " data points.");
data = json.data;
visualize(data); //then start the visualization

});

function visualize(data)
{
//dimensions of the chart
var w = 720;
var h = 640;
//empty area between last element and chart borders
var padding = 20;

//the format of the data
var format = d3.format(".0");

//will use this one below
function getX(d) {
return d.x;
};

function getY(d) {
return d.y;
};

//the scales
var xScale = d3.scale.linear()
.domain([d3.min(data, getX), d3.max(data, getX)])
.range([padding, w - padding]);
var yScale = d3.scale.linear()
.domain([d3.min(data, getY), d3.max(data, getY)])
.range([h - padding, padding]);

//the axes
var xAxis = d3.svg.axis()
.scale(xScale)
.orient("bottom")
.ticks(3)
.tickFormat(format);

var yAxis = d3.svg.axis()
.scale(yScale)
.orient("left")
.ticks(3)
.tickFormat(format);



//the svg chart!
var svg = d3.select("body")
.append("svg")
.attr("width", w)
.attr("height", h);



//create the points of the scatterplot
//well, they are svg circles
svg.selectAll("circle")
.data(data)
.enter()
.append("circle")
.attr("cx", function(d) { return xScale(d.x);})
.attr("cy", function(d) { return yScale(d.y);})
.attr("r", 5) //arbitrary. big enough? scale automatically?
.attr("x", getX)
.attr("x", getY)
.attr("class","circle")
.append("svg:title")
.text(function (d) {return "(" + d.x + "," + d.y + ")";});


//create the axes, too
svg.append("g")
.attr("class", "axis")
.attr("transform", "translate(0," + (h - padding) + ")")
.call(xAxis);

svg.append("g")
.attr("class", "axis")
.attr("transform", "translate(" + padding + ",0)")
.call(yAxis);


}

</script>