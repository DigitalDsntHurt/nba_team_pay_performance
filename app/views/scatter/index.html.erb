<h1 align="center" class="svg_txt_1">Scatter Plots</h1>

<d>
	<h4 align="center">thin rectangles where axes should be</h4>
	<script src="https://d3js.org/d3.v4.min.js"></script>
	<script>
		var width = 2300;
		var height = 900;
		var padding = 100;

		var canvas = d3.select("d")
			.append("svg")
			.attr("width",width)
			.attr("height",height);

		canvas.append("g")
			.append("rect")
				.attr("width",width)
				.attr("height",3)
				.attr("fill","black")
				.attr("x",padding)
				.attr("y",height-10);

		canvas.append("g")
			.append("rect")
				.attr("width",3)
				.attr("height",height)
				.attr("fill","black")
				.attr("x",padding)
				.attr("y",10);				
	</script>
</d>

<br>
	<hr>
<br>

<div class="chart-container">
<chart>
    <h4 align="center"> Just the Axes </h4>
  <script src="https://d3js.org/d3.v4.min.js"></script>
  <script>

  var data = d3.csv('/2016-17_public.csv', function(data){

    var width = 1500;
    var height = 750;
    var padding = { top: 20, right: 20, bottom: 20, left:20 }
    
    var canvas = d3.select("chart")
                  .append("svg")
                  .attr("width",width)
                  .attr("height",height);

    var x = d3.scaleLinear()
        .domain([0,82])
        .range([padding.left*4,width-padding.right]);
        //.range([0,width]);

    var y = d3.scaleLinear()
            .domain([50000000,170000000])
            .range([height-(padding.bottom*3),padding.top]);
            //.range([height,0]);

    var axisGroup = canvas.append("g")
            //.attr("transform", "translate(" + padding.left + "," + padding.top + ")");

    axisGroup.append("g")
          //.attr("transform", "translate(" + padding.left + "," + (padding.bottom - 5) + ")")
          .attr("transform", "translate(" + padding.left*4 + ",0)")
          .attr("class", "axis")
          .call(d3.axisLeft(y)
              .ticks(10));

      axisGroup.append("g")
        .attr("transform", "translate(0," + (height-50) + ")")
        .attr("class", "axis")
        .call(d3.axisBottom(x)
        .ticks(5));

  });
</script>
</chart>
</div>

<br>
	<hr>
<br>

<div class="chart-container">
<chart1>
	<h1 align="center" class="svg_txt_1">Wins vs Salary, NBA Teams, 2010-2016 Seasons</h1>
    <h4 align="center"> axes w/ scaled, team-colored data </h4>
  <script src="https://d3js.org/d3.v4.min.js"></script>
  <script>

  var data = d3.csv('/teamyears-salaries-colors_public.csv', function(data){

    var width = 1500;
    var height = 750;
    var padding = { top: 20, right: 20, bottom: 20, left:20 }
    
    var canvas = d3.select("chart1")
                  .append("svg")
                  .attr("width",width)
                  .attr("height",height);

    var x = d3.scaleLinear()
        .domain([0,82])
        .range([padding.left*4,width-padding.right]);
        //.range([0,width]);

    var y = d3.scaleLinear()
            .domain([50000000,170000000])
            .range([height-(padding.bottom*3),padding.top]);
            //.range([height,0]);

    var axisGroup = canvas.append("g")
            //.attr("transform", "translate(" + padding.left + "," + padding.top + ")");

    axisGroup.append("g")
          //.attr("transform", "translate(" + padding.left + "," + (padding.bottom - 5) + ")")
          .attr("transform", "translate(" + padding.left*4 + ",0)")
          .attr("class", "axis")
          .call(d3.axisLeft(y)
              .ticks(10));

	axisGroup.append("g")
	.attr("transform", "translate(0," + (height-50) + ")")
	.attr("class", "axis")
	.call(d3.axisBottom(x)
		.ticks(5));

	var circlesGroup = canvas.append("g")
		.attr("transform", "translate(0,-200)");

    circlesGroup.selectAll("circle")
    	.data(data)
    	.enter()
    		.append("circle")
    		.attr('team-name', function(d){ return d.team })
    		.attr('season', function(d){ return d.season })
    		.attr('cx', function(d){ return x(d.wins) })
    		.attr('cy', function(d){ return y(d.salary) })
    		.attr('r', 14)
    		.attr('fill',function(d){ return d.color });

  });
</script>
</chart1>
</div>

<br>
	<hr>
<br>

<div class="chart-container">
<chart2>
	<h1 align="center" class="svg_txt_1">Wins vs Salary, NBA Teams, 2010-2016 Seasons</h1>
    <h4 align="center"> axes w/ scaled, team-colored data </h4>
  <script src="https://d3js.org/d3.v4.min.js"></script>
  <script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
  <script>
	
	var width = 1500;
	var height = 750;
	var padding = { top: 20, right: 20, bottom: 20, left:20 }

  	//canvas.call(tip);

	var data = d3.csv('/teamyears-salaries-colors_public.csv', function(data){

	var canvas = d3.select("chart2")
	              .append("svg")
	              .attr("width",width)
	              .attr("height",height);

    var x = d3.scaleLinear()
        .domain([0,82])
        .range([padding.left*4,width-padding.right]);

    var y = d3.scaleLinear()
            .domain([50000000,170000000])
            .range([height-(padding.bottom*3),padding.top]);

    var axisGroup = canvas.append("g");

    axisGroup.append("g")
      .attr("transform", "translate(" + padding.left*4 + ",0)")
      .attr("class", "axis")
      .call(d3.axisLeft(y)
          .ticks(10));

	axisGroup.append("g")
	.attr("transform", "translate(0," + (height-50) + ")")
	.attr("class", "axis")
	.call(d3.axisBottom(x)
		.ticks(5));

	var circlesGroup = canvas.append("g")
		.attr("transform", "translate(0,-200)");

	var tip = d3.tip()
	  .attr('class', 'd3-tip')
  	  .offset([-10, 0])
	  .html(function(d) {
	    return "<strong>Wins:</strong> <span style='color:red'>" + d.wins + "</span><br><strong>Salary:</strong> <span style='color:red'>" + d.salary + "</span>"
	 })
	  .style("visibility", "hidden");

	//circlesGroup.call(tip);

    circlesGroup.selectAll("circle")
    	.data(data)
    	.enter()
    		.append("circle")
    		.attr('class','team-circle')
    		.attr('team-name', function(d){ return d.team })
    		.attr('season', function(d){ return d.season })
    		.attr('salary', function(d){ return d.salary })
    		.attr('wins', function(d){ return d.wins })
    		.attr('cx', function(d){ return x(d.wins) })
    		.attr('cy', function(d){ return y(d.salary) })
    		.attr('r', 14)
    		.attr('fill',function(d){ return d.color })
    		.call(tip)
			.on("mouseover", function(){return tip.style("visibility", "visible")})
			.on("mouseout", function(){return tip.style("visibility", "hidden")});
  });
</script>
</chart2>
</div>

<br>
	<hr>
<br>

<div class="chart-container">
<chart3>
	<h1 align="center" class="svg_txt_1">Wins vs Salary, NBA Teams, 2010-2016 Seasons</h1>
    <h4 align="center"> axes w/ scaled, team-colored data </h4>
  <script src="https://d3js.org/d3.v4.min.js"></script>
  <script src="http://labratrevenge.com/d3-tip/javascripts/d3.tip.v0.6.3.js"></script>
  <script>

// Get Data
	var data = d3.csv('/teamyears-salaries-colors_public.csv', function(data){

// Setup Chart Container 
		var width = 1500;
		var height = 750;
		var padding = { top: 20, right: 20, bottom: 20, left:20 }

// Create Axes
		var canvas = d3.select("chart3")
			.append("svg")
			.attr("width",width)
			.attr("height",height);

	    var x = d3.scaleLinear()
			.domain([0,82])
			.range([padding.left*4,width-padding.right]);

	    var y = d3.scaleLinear()
	        .domain([50000000,170000000])
	        .range([height-(padding.bottom*3),padding.top]);

	    var axisGroup = canvas.append("g");

	    axisGroup.append("g")
	      .attr("transform", "translate(" + padding.left*4 + ",0)")
	      .attr("class", "axis")
	      .call(d3.axisLeft(y)
	          .ticks(10));

		axisGroup.append("g")
		.attr("transform", "translate(0," + (height-50) + ")")
		.attr("class", "axis")
		.call(d3.axisBottom(x)
			.ticks(5));

// Setup Tooltip
		var div = d3.select("chart3").append("div")   
		    .attr("y",500)
		    .attr("class", "ghetto-tooltip")               
		    .style("opacity", 0);

// Draw Circles
		var circlesGroup = canvas.append("g")
			.attr("class","circle-group")
			.attr("transform", "translate(0,-200)");

	    circlesGroup.selectAll("circle")
	    	.data(data)
	    	.enter()
	    		.append("circle")
	    		.attr('class','team-circle')
	    		.attr('team-name', function(d){ return d.team })
	    		.attr('season', function(d){ return d.season })
	    		.attr('salary', function(d){ return d.salary })
	    		.attr('wins', function(d){ return d.wins })
	    		.attr('cx', function(d){ return x(d.wins) })
	    		.attr('cy', function(d){ return y(d.salary) })
	    		.attr('r', 14)
	    		.attr('fill',function(d){ return d.color })
				//.on("mouseover", function(){return tip.style("visibility", "visible")})
				//.on("mouseout", function(){return tip.style("visibility", "hidden")});
				.on("mouseover", function(d){ 
					div.style("opacity", .9);
					div.html("<p>" + "<strong>Wins:</strong> " + d.wins + "<br>" + "<strong>Salary:</strong> " + d.salary + "</p>");
					div.attr("fill", d.color);
				})
				.on("mouseout", function(d){ 
					div.style("opacity", 0);
				});
	});
</script>
</chart3>
</div>